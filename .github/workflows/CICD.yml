name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    outputs:
      ec2_ips: ${{ steps.get_instance_ips.outputs.ips }}
      image_version: ${{ steps.image_version.outputs.gitsha }}

    steps:
    - uses: actions/checkout@v3
    
    - name: Set image version (tag)
      id: image_version
      run: echo "gitsha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Login to Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ghcr.io/batoul-shaheen/e-commerce-platform:${{ steps.image_version.outputs.gitsha }}
    - name: Publish docker image
      run: docker push ghcr.io/batoul-shaheen/e-commerce-platform:${{ steps.image_version.outputs.gitsha }}
    - name: Get EC2 Instance IPs
      id: get_instance_ips
      run: |
        instances=$(aws ec2 describe-instances --filters "Name=tag:aws:autoscaling:groupName,Values=e-Commerce-AB" --query 'Reservations[*].Instances[*].[PublicIpAddress]' --output json | jq --compact-output 'flatten')
        echo "ips=$instances" >> $GITHUB_OUTPUT
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
  
  deploy:
    needs: ["build"]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ip: ${{ fromJson(needs.build.outputs.ec2_ips) }}
    steps:
      - uses: actions/checkout@v3
      - name: configure docker host
        uses: khaledez/configure-docker-host@v1
        with:
          host: ${{ matrix.ip }}
          user: github
          ssh-private-key: ${{ secrets.DEPLOYMENT_KEY }}
      - name: login to Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: deploy
        run: docker compose -f docker-compose-prod.yml up -d && docker system prune -af
        env:
          RDS_DB_PASSWORD: ${{ secrets.RDS_DB_PASSWORD }}
          GIT_VERSISON: ${{ needs.build.outputs.image_version }}
          RDS_DB_HOST: ${{ secrets.RDS_DB_HOST }}
          RDS_DB_PORT: ${{ secrets.RDS_DB_PORT }}
          RDS_DB_USER_NAME: ${{ secrets.RDS_DB_USER_NAME }}
          RDS_DB_NAME: ${{ secrets.RDS_DB_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          PORT: ${{ secrets.PORT }}
      